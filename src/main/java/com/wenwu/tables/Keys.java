/**
 * This class is generated by jOOQ
 */
package com.wenwu.tables;


import com.wenwu.tables.tables.SCourse;
import com.wenwu.tables.tables.SCourseHistory;
import com.wenwu.tables.tables.SCourseJoin;
import com.wenwu.tables.tables.SCourseQuestion;
import com.wenwu.tables.tables.SCourseware;
import com.wenwu.tables.tables.SUserAccount;
import com.wenwu.tables.tables.records.SCourseHistoryRecord;
import com.wenwu.tables.tables.records.SCourseJoinRecord;
import com.wenwu.tables.tables.records.SCourseQuestionRecord;
import com.wenwu.tables.tables.records.SCourseRecord;
import com.wenwu.tables.tables.records.SCoursewareRecord;
import com.wenwu.tables.tables.records.SUserAccountRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>db_wenwu</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<SCourseRecord, Integer> IDENTITY_S_COURSE = Identities0.IDENTITY_S_COURSE;
    public static final Identity<SCoursewareRecord, Integer> IDENTITY_S_COURSEWARE = Identities0.IDENTITY_S_COURSEWARE;
    public static final Identity<SCourseHistoryRecord, Integer> IDENTITY_S_COURSE_HISTORY = Identities0.IDENTITY_S_COURSE_HISTORY;
    public static final Identity<SCourseJoinRecord, Integer> IDENTITY_S_COURSE_JOIN = Identities0.IDENTITY_S_COURSE_JOIN;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<SCourseRecord> KEY_S_COURSE_PRIMARY = UniqueKeys0.KEY_S_COURSE_PRIMARY;
    public static final UniqueKey<SCoursewareRecord> KEY_S_COURSEWARE_PRIMARY = UniqueKeys0.KEY_S_COURSEWARE_PRIMARY;
    public static final UniqueKey<SCourseHistoryRecord> KEY_S_COURSE_HISTORY_PRIMARY = UniqueKeys0.KEY_S_COURSE_HISTORY_PRIMARY;
    public static final UniqueKey<SCourseJoinRecord> KEY_S_COURSE_JOIN_PRIMARY = UniqueKeys0.KEY_S_COURSE_JOIN_PRIMARY;
    public static final UniqueKey<SCourseQuestionRecord> KEY_S_COURSE_QUESTION_PRIMARY = UniqueKeys0.KEY_S_COURSE_QUESTION_PRIMARY;
    public static final UniqueKey<SUserAccountRecord> KEY_S_USER_ACCOUNT_PRIMARY = UniqueKeys0.KEY_S_USER_ACCOUNT_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<SCourseRecord, Integer> IDENTITY_S_COURSE = createIdentity(SCourse.S_COURSE, SCourse.S_COURSE.ID);
        public static Identity<SCoursewareRecord, Integer> IDENTITY_S_COURSEWARE = createIdentity(SCourseware.S_COURSEWARE, SCourseware.S_COURSEWARE.ID);
        public static Identity<SCourseHistoryRecord, Integer> IDENTITY_S_COURSE_HISTORY = createIdentity(SCourseHistory.S_COURSE_HISTORY, SCourseHistory.S_COURSE_HISTORY.ID);
        public static Identity<SCourseJoinRecord, Integer> IDENTITY_S_COURSE_JOIN = createIdentity(SCourseJoin.S_COURSE_JOIN, SCourseJoin.S_COURSE_JOIN.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<SCourseRecord> KEY_S_COURSE_PRIMARY = createUniqueKey(SCourse.S_COURSE, "KEY_s_course_PRIMARY", SCourse.S_COURSE.ID);
        public static final UniqueKey<SCoursewareRecord> KEY_S_COURSEWARE_PRIMARY = createUniqueKey(SCourseware.S_COURSEWARE, "KEY_s_courseware_PRIMARY", SCourseware.S_COURSEWARE.ID);
        public static final UniqueKey<SCourseHistoryRecord> KEY_S_COURSE_HISTORY_PRIMARY = createUniqueKey(SCourseHistory.S_COURSE_HISTORY, "KEY_s_course_history_PRIMARY", SCourseHistory.S_COURSE_HISTORY.ID);
        public static final UniqueKey<SCourseJoinRecord> KEY_S_COURSE_JOIN_PRIMARY = createUniqueKey(SCourseJoin.S_COURSE_JOIN, "KEY_s_course_join_PRIMARY", SCourseJoin.S_COURSE_JOIN.ID);
        public static final UniqueKey<SCourseQuestionRecord> KEY_S_COURSE_QUESTION_PRIMARY = createUniqueKey(SCourseQuestion.S_COURSE_QUESTION, "KEY_s_course_question_PRIMARY", SCourseQuestion.S_COURSE_QUESTION.ID);
        public static final UniqueKey<SUserAccountRecord> KEY_S_USER_ACCOUNT_PRIMARY = createUniqueKey(SUserAccount.S_USER_ACCOUNT, "KEY_s_user_account_PRIMARY", SUserAccount.S_USER_ACCOUNT.ID);
    }
}
