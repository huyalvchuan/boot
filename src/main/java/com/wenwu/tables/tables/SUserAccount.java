/**
 * This class is generated by jOOQ
 */
package com.wenwu.tables.tables;


import com.wenwu.tables.DbWenwu;
import com.wenwu.tables.Keys;
import com.wenwu.tables.tables.records.SUserAccountRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SUserAccount extends TableImpl<SUserAccountRecord> {

    private static final long serialVersionUID = 568954939;

    /**
     * The reference instance of <code>db_wenwu.s_user_account</code>
     */
    public static final SUserAccount S_USER_ACCOUNT = new SUserAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SUserAccountRecord> getRecordType() {
        return SUserAccountRecord.class;
    }

    /**
     * The column <code>db_wenwu.s_user_account.id</code>.
     */
    public final TableField<SUserAccountRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_user_account.openid</code>.
     */
    public final TableField<SUserAccountRecord, String> OPENID = createField("openid", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_user_account.wx_name</code>.
     */
    public final TableField<SUserAccountRecord, String> WX_NAME = createField("wx_name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_user_account.r_name</code>.
     */
    public final TableField<SUserAccountRecord, String> R_NAME = createField("r_name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_user_account.avatar</code>.
     */
    public final TableField<SUserAccountRecord, String> AVATAR = createField("avatar", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_user_account.email</code>.
     */
    public final TableField<SUserAccountRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_user_account.pwd</code>.
     */
    public final TableField<SUserAccountRecord, String> PWD = createField("pwd", org.jooq.impl.SQLDataType.VARCHAR.length(70).nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_user_account.token</code>.
     */
    public final TableField<SUserAccountRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>db_wenwu.s_user_account.last_login_time</code>.
     */
    public final TableField<SUserAccountRecord, Timestamp> LAST_LOGIN_TIME = createField("last_login_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>db_wenwu.s_user_account.last_login_ip</code>.
     */
    public final TableField<SUserAccountRecord, String> LAST_LOGIN_IP = createField("last_login_ip", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>db_wenwu.s_user_account.status</code>.
     */
    public final TableField<SUserAccountRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>db_wenwu.s_user_account</code> table reference
     */
    public SUserAccount() {
        this("s_user_account", null);
    }

    /**
     * Create an aliased <code>db_wenwu.s_user_account</code> table reference
     */
    public SUserAccount(String alias) {
        this(alias, S_USER_ACCOUNT);
    }

    private SUserAccount(String alias, Table<SUserAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private SUserAccount(String alias, Table<SUserAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbWenwu.DB_WENWU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SUserAccountRecord> getPrimaryKey() {
        return Keys.KEY_S_USER_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SUserAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<SUserAccountRecord>>asList(Keys.KEY_S_USER_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SUserAccount as(String alias) {
        return new SUserAccount(alias, this);
    }

    /**
     * Rename this table
     */
    public SUserAccount rename(String name) {
        return new SUserAccount(name, null);
    }
}
