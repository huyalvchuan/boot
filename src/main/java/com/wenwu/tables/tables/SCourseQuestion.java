/**
 * This class is generated by jOOQ
 */
package com.wenwu.tables.tables;


import com.wenwu.tables.DbWenwu;
import com.wenwu.tables.Keys;
import com.wenwu.tables.tables.records.SCourseQuestionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SCourseQuestion extends TableImpl<SCourseQuestionRecord> {

    private static final long serialVersionUID = -772753337;

    /**
     * The reference instance of <code>db_wenwu.s_course_question</code>
     */
    public static final SCourseQuestion S_COURSE_QUESTION = new SCourseQuestion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SCourseQuestionRecord> getRecordType() {
        return SCourseQuestionRecord.class;
    }

    /**
     * The column <code>db_wenwu.s_course_question.id</code>.
     */
    public final TableField<SCourseQuestionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_course_question.content</code>.
     */
    public final TableField<SCourseQuestionRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_course_question.create_time</code>.
     */
    public final TableField<SCourseQuestionRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>db_wenwu.s_course_question.u_id</code>.
     */
    public final TableField<SCourseQuestionRecord, Integer> U_ID = createField("u_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_wenwu.s_course_question.ch_id</code>.
     */
    public final TableField<SCourseQuestionRecord, Integer> CH_ID = createField("ch_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>db_wenwu.s_course_question</code> table reference
     */
    public SCourseQuestion() {
        this("s_course_question", null);
    }

    /**
     * Create an aliased <code>db_wenwu.s_course_question</code> table reference
     */
    public SCourseQuestion(String alias) {
        this(alias, S_COURSE_QUESTION);
    }

    private SCourseQuestion(String alias, Table<SCourseQuestionRecord> aliased) {
        this(alias, aliased, null);
    }

    private SCourseQuestion(String alias, Table<SCourseQuestionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbWenwu.DB_WENWU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SCourseQuestionRecord> getPrimaryKey() {
        return Keys.KEY_S_COURSE_QUESTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SCourseQuestionRecord>> getKeys() {
        return Arrays.<UniqueKey<SCourseQuestionRecord>>asList(Keys.KEY_S_COURSE_QUESTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SCourseQuestion as(String alias) {
        return new SCourseQuestion(alias, this);
    }

    /**
     * Rename this table
     */
    public SCourseQuestion rename(String name) {
        return new SCourseQuestion(name, null);
    }
}
